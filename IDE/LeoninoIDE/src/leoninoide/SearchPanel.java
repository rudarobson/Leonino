/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package leoninoide;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.SearchContext;
import org.fife.ui.rtextarea.SearchEngine;

/**
 *
 * @author rudarobson
 */
public class SearchPanel extends javax.swing.JPanel implements ActionListener {

    private boolean resetCarretOnSearch;
    private RSyntaxTextArea textArea;
    /**
     * Creates new form SearchWindowPanel
     */
    public SearchPanel() {
        initComponents();
        findNext.setActionCommand("FindNext");
        searchField.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                findNext.doClick(0);
            }
        });
        findPrev.setActionCommand("FindPrev");
        findPrev.addActionListener(this);
        resetCarretOnSearch = true;
    }

    public void startSearch(){
        resetCarretOnSearch = true;
        searchField.requestFocus();
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {

        // "FindNext" => search forward, "FindPrev" => search backward
        String command = e.getActionCommand();
        boolean forward = "FindNext".equals(command);

        // Create an object defining our search parameters.
        SearchContext context = new SearchContext();
        String text = searchField.getText();
        if (text.length() == 0) {
            return;
        }
        context.setSearchFor(text);
        context.setMatchCase(matchCaseCB.isSelected());
        context.setRegularExpression(regexCB.isSelected());
        context.setSearchForward(forward);
        context.setWholeWord(false);

        boolean found = SearchEngine.find(textArea, context);
        if (!found) {
            JOptionPane.showMessageDialog(this, "Text not found");
        }
    }

    public RSyntaxTextArea getTextArea() {
        return textArea;
    }

    public void setTextArea(RSyntaxTextArea textArea) {
        this.textArea = textArea;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        findNext = new javax.swing.JButton();
        findPrev = new javax.swing.JButton();
        regexCB = new javax.swing.JCheckBox();
        matchCaseCB = new javax.swing.JCheckBox();
        searchField = new javax.swing.JTextField();

        findNext.setText("Find Next");

        findPrev.setText("Find Previous");

        regexCB.setText("Regex");

        matchCaseCB.setText("Match Case");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findPrev)
                .addGap(18, 18, 18)
                .addComponent(regexCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matchCaseCB)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findNext)
                    .addComponent(findPrev)
                    .addComponent(regexCB)
                    .addComponent(matchCaseCB)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton findNext;
    private javax.swing.JButton findPrev;
    private javax.swing.JCheckBox matchCaseCB;
    private javax.swing.JCheckBox regexCB;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
